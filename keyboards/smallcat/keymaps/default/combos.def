// left base
COMB(C_LB_X,     KC_X,      CK_1, CK_2)
COMB(C_LB_Q,     KC_Q,      CK_2, CK_3)
COMB(C_LB_W,     KC_W,      CK_5, CK_6)
COMB(C_LB_Z,     KC_Z,      CK_9, CK_10)
COMB(C_LB_V,     KC_V,      CK_10, CK_11)
COMB(C_LB_B,     KC_B,      CK_6, CK_11)
COMB(C_LB_LBRC,  KC_LBRC,   CK_1, CK_3)
COMB(C_LB_LPRN,  KC_LPRN,   CK_9, CK_11)
SUBS(C_LB_TH,    "th",      CK_6, CK_7)
SUBS(C_LB_SH,    "sh",      CK_5, CK_7)
SUBS(C_LB_VER,   "ver",     CK_4, CK_7)

// right base
COMB(C_RB_J,     KC_J,      CK_14, CK_15)
COMB(C_RB_ESC,   KC_ESC,    CK_15, CK_16)
COMB(C_RB_OSM_S, OSM(MOD_LSFT), CK_18, CK_19)
COMB(C_RB_UNDS,  KC_UNDS,   CK_19, CK_20)
COMB(C_RB_SCLN,  KC_SCLN,   CK_23, CK_24)
COMB(C_RB_K,     KC_K,      CK_19, CK_22)
COMB(C_RB_RBRC,  KC_RBRC,   CK_14, CK_16)
COMB(C_RB_RPRN,  KC_RPRN,   CK_22, CK_24)
COMB(C_RB_DASH,  KC_MINS,   CK_18, CK_20)
SUBS(C_RB_YOU,   "you",     CK_16, CK_18)
SUBS(C_RB_ION,   "ion",     CK_22, CK_20)
SUBS(C_RB_ING,   "ing",     CK_18, CK_21)

// both base
COMB(C_BB_CAPS,  KC_CAPS,  CK_8, CK_17)
COMB(C_BB_PSCRN, SGUI(KC_4),  CK_1, CK_16)

// left sym
COMB(C_LS_EURO,  KC_EURO,  LSFT(KC_3), LSFT(KC_4))
SUBS(C_LS_DOCSTRING, "\"\"\"", KC_EQUAL, LSFT(KC_QUOTE))
SUBS(C_LS_MARKCODE,  "```",    LSFT(KC_7), KC_GRAVE)

// right sym
COMB(C_RS_CIRC,  KC_CIRC,   RALT(KC_3), LSFT(KC_GRAVE))

// left edit
COMB(C_LE_SAVE,  LGUI(KC_S),   LGUI(KC_C), LGUI(KC_V))

// right fun
COMB(C_LF_F10,   KC_F10,    KC_F7, KC_F8)
COMB(C_LF_F11,   KC_F11,    KC_F8, KC_F9)
COMB(C_LF_F12,   KC_F12,    KC_F7, KC_F8, KC_F9)

// left sys
COMB(C_LSYS_HOME,  KC_HOME,  KC_BRIU, KC_WH_U)
COMB(C_LSYS_ACL1,  KC_ACL1,  KC_WH_U, KC_WH_D)

// right sys
COMB(C_RSYS_END,   KC_END,   KC_MS_U, KC_MS_R)
